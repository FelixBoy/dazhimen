<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dazhimen.bg.bean.Product">
    <update id="dealProductIstry">
        update product a
        set a.istry = (select case count(b.courseid) when 0 then 0
                                                      else 1 end as productistry
	                    from course b where b.pid = #{pid} and b.istry = '1'
	                  )
        where a.pid = #{pid};
    </update>
    <update id="updateMainImgPath" parameterType="dazhimen.bg.bean.product.UpdateMainImgFilePathBean">
        update product_image set path = #{mainimage} where pid = #{pid}
    </update>
    <select id="getMainImgPath" resultType="java.lang.String">
        select path
        from product_image a
        where a.pid = #{pid}
    </select>
    <update id="updateListImgPath" parameterType="dazhimen.bg.bean.product.UpdateListImgFilePathBean">
      update product set listimage = #{listimage} where pid = #{pid}
    </update>
    <select id="getListImgPath" resultType="java.lang.String">
        select listimage
        from product a
        where a.pid = #{pid}
    </select>
    <update id="saveModifyProductBasicInfo" parameterType="dazhimen.bg.bean.product.ModifyProductBasicInfoBean">
        update product
          set pname = #{pname},price = #{price},
              derateProportion = #{derateProportion},
              introduction = #{introduction}
        where pid = #{pid}
    </update>

    <select id="getAllProductCountByParam" resultType="dazhimen.bg.bean.SingleValueBean"
            parameterType="dazhimen.bg.bean.product.QueryProductParamBean">
        select count(pid) as valueinfo
        from product a
        where a.isdel = '0'
         <if test="pidCondition != null and pidCondition != ''">
             and  pid like concat('%', #{pidCondition}, '%')
         </if>
        <if test="pnameCondition != null and pnameCondition != ''">
            and pname like concat('%', #{pnameCondition}, '%')
        </if>
        <if test="typeCondition != null and typeCondition != 0">
            and a.type = #{typeCondition}
        </if>
        <if test="statusCondition != null and statusCondition != 0">
            and status = #{statusCondition}
        </if>
        <if test="starttimeCondition != null and starttimeCondition !=''">
            and createdatetime <![CDATA[>=]]> #{starttimeCondition}
        </if>
        <if test="endtimeCondition != null and endtimeCondition !=''">
            and createdatetime <![CDATA[<=]]> #{endtimeCondition}
        </if>
    </select>

    <select id="getAllProductCountByParamAndMaster" resultType="dazhimen.bg.bean.SingleValueBean"
            parameterType="dazhimen.bg.bean.product.QueryProductParamBean">
        select count(pid) as valueinfo
        from product a, user b
        where a.isdel = '0'
          and a.uid = b.uid
          and b.uid = #{uid}
        <if test="pidCondition != null and pidCondition != ''">
            and  pid like concat('%', #{pidCondition}, '%')
        </if>
        <if test="pnameCondition != null and pnameCondition != ''">
            and pname like concat('%', #{pnameCondition}, '%')
        </if>
        <if test="typeCondition != null and typeCondition != 0">
            and a.type = #{typeCondition}
        </if>
        <if test="statusCondition != null and statusCondition != 0">
            and status = #{statusCondition}
        </if>
        <if test="starttimeCondition != null and starttimeCondition !=''">
            and createdatetime <![CDATA[>=]]> #{starttimeCondition}
        </if>
        <if test="endtimeCondition != null and endtimeCondition !=''">
            and createdatetime <![CDATA[<=]]> #{endtimeCondition}
        </if>
    </select>

    <select id="listAllProductByParam" resultType="dazhimen.bg.bean.product.ListViewProductBean"
            parameterType="dazhimen.bg.bean.product.QueryProductParamBean">
        select pid,pname,getcodetxt('producttype',a.type) type,
        getcodetxt('productstatus',a.status) status,a.status statusnum,
        date_format(a.createdatetime,'%Y-%m-%d %H:%i:%s') createtime,b.name uname,
        buycount,concat(a.price,'/年') as price
        from product a, user b
        where a.uid = b.uid and a.isdel = '0'
        <if test="pidCondition != null and pidCondition != ''">
           and pid like concat('%', #{pidCondition}, '%')
        </if>
        <if test="pnameCondition != null and pnameCondition != ''">
            and pname like concat('%', #{pnameCondition}, '%')
        </if>
        <if test="typeCondition !=null and typeCondition!= 0">
            and a.type = #{typeCondition}
        </if>
        <if test="statusCondition != null and statusCondition != 0">
            and status = #{statusCondition}
        </if>
        <if test="starttimeCondition != null and starttimeCondition !=''">
            and createdatetime <![CDATA[>=]]> #{starttimeCondition}
        </if>
        <if test="endtimeCondition != null and endtimeCondition !=''">
            and createdatetime <![CDATA[<=]]> #{endtimeCondition}
        </if>
        order by createdatetime desc
        limit #{startnum},#{getrows}
    </select>
    <select id="listAllProductByParamAndMaster" resultType="dazhimen.bg.bean.product.ListViewProductBean"
            parameterType="dazhimen.bg.bean.product.QueryProductParamBean">
        select pid,pname,getcodetxt('producttype',a.type) type,
        getcodetxt('productstatus',a.status) status,a.status statusnum,
        date_format(a.createdatetime,'%Y-%m-%d %H:%i:%s') createtime,b.name uname,
        buycount,concat(a.price,'/年') as price
        from product a, user b
        where a.uid = b.uid and a.isdel = '0' and b.uid = #{uid}
        <if test="pidCondition != null and pidCondition != ''">
            and pid like concat('%', #{pidCondition}, '%')
        </if>
        <if test="pnameCondition != null and pnameCondition != ''">
            and pname like concat('%', #{pnameCondition}, '%')
        </if>
        <if test="typeCondition !=null and typeCondition!= 0">
            and a.type = #{typeCondition}
        </if>
        <if test="statusCondition != null and statusCondition != 0">
            and status = #{statusCondition}
        </if>
        <if test="starttimeCondition != null and starttimeCondition !=''">
            and createdatetime <![CDATA[>=]]> #{starttimeCondition}
        </if>
        <if test="endtimeCondition != null and endtimeCondition !=''">
            and createdatetime <![CDATA[<=]]> #{endtimeCondition}
        </if>
        order by createdatetime desc
        limit #{startnum},#{getrows}
    </select>

    <select id="getAllProductCount" resultType="dazhimen.bg.bean.SingleValueBean">
         select count(pid) as valueinfo
        from product a
       where a.isdel = '0'
    </select>
    <select id="getAllProductCountByMaster" resultType="dazhimen.bg.bean.SingleValueBean">
        select count(pid) as valueinfo
        from product a,
             user b
        where a.isdel = '0'
          and a.uid = b.uid
          and b.uid = #{uid}
    </select>
    <select id="listAllProductByMaster" resultType="dazhimen.bg.bean.product.ListViewProductBean"
            parameterType="dazhimen.bg.bean.MasterPaginationParamBean">
        select pid,pname,getcodetxt('producttype',a.type) type,
        getcodetxt('productstatus',a.status) status,a.status statusnum,
        date_format(a.createdatetime,'%Y-%m-%d %H:%i:%s') createtime,b.name uname,
        buycount,concat(a.price,'/年') as price
        from product a, user b
        where a.uid = b.uid and a.isdel = '0' and b.uid = #{uid}
        order by createdatetime desc
        limit #{startnum},#{getrows}
    </select>
    <select id="listAllProduct" resultType="dazhimen.bg.bean.product.ListViewProductBean"
            parameterType="dazhimen.bg.bean.PaginationParamBean">
       select pid,pname,getcodetxt('producttype',a.type) type,
               getcodetxt('productstatus',a.status) status,a.status statusnum,
               date_format(a.createdatetime,'%Y-%m-%d %H:%i:%s') createtime,b.name uname,
               buycount,concat(a.price,'/年') as price
        from product a, user b
       where a.uid = b.uid and a.isdel = '0'
       order by createdatetime desc
       limit #{startnum},#{getrows}
    </select>

    <select id="getModifyProductInforById" resultType="dazhimen.bg.bean.product.ViewProductBean">
        select pid,pname,getcodetxt('producttype',a.type) as type,derateProportion,a.price,
        a.introduction,getcodetxt('indexsort',a.indexsort) as indexsort,getcodetxt('rightorwrong',indexplay) as indexplay,
        listimage,b.uid,b.name as uname,b.mphone,b.loginname,getcodetxt('gender',b.gender) as gender
        from product a,user b
        where a.uid = b.uid
        and pid = #{pid}
        and a.isdel = '0'
    </select>

    <select id="getProductInforById" resultType="dazhimen.bg.bean.product.ViewProductBean">
        select pid,pname,getcodetxt('producttype',a.type) as type,concat(a.derateProportion,'%') as derateProportion,concat(a.price,'/年') as price,
                a.introduction,getcodetxt('indexsort',a.indexsort) as indexsort,getcodetxt('yesorno',indexplay) as indexplay,
                listimage,b.uid,b.name as uname,b.mphone,b.loginname,getcodetxt('gender',b.gender) as gender
          from product a,user b
        where a.uid = b.uid
          and pid = #{pid}
          and a.isdel = '0'
    </select>

    <insert id="saveAddProduct" parameterType="dazhimen.bg.bean.product.UploadProductBean">
        insert into product(pid,pname,type,price,derateProportion,introduction,
                            indexplay,indexsort,uid,createdatetime,listimage,updatedatetime)
              values(#{pid},  #{pname}  ,#{type},  #{price}, #{derateProportion},  #{introduction},
                            #{indexPlay},#{indexSort},#{uid},now(),#{listimage},now())
    </insert>

    <insert id="saveAddProductImage" parameterType="dazhimen.bg.bean.product.AddProductImageBean">
        insert into product_image(imageid,path,pid)
                        values(#{imageid},    #{path},   #{pid})
    </insert>

    <select id="getCourseInforByCourseid" resultType="dazhimen.bg.bean.product.UploadCourseBean">
        select pid,courseid,coursename,sort,istry
          from course
        where courseid = #{courseid}
    </select>

    <select id="getAllCourseCountByPid" resultType="dazhimen.bg.bean.SingleValueBean">
       select count(courseid) as valueinfo
          from course where pid = #{pid}
    </select>

    <select id="queryAllCourseByPid" resultType="dazhimen.bg.bean.product.ListViewCourseBean"
            parameterType="dazhimen.bg.bean.PaginationParamBean">
        select courseid,coursename,getcodetxt('indexsort',sort) as sortstr,viewcount,
                getcodetxt('yesorno',istry) as istry,audiopath as audiourl
          from course where pid = #{pid}
          order by sort,createdate desc
        limit #{startnum},#{getrows}
    </select>

    <select id="getMasterDataByUid" resultType="dazhimen.bg.bean.user.UserBean">
        select uid,name,mphone,gender,loginname,date_format(createdate,'%Y-%m-%d %H:%i:%s') as createDatestr,remarks
          from user
        where uid = #{uid}
    </select>

    <select id="getAllMastersCount" resultType="dazhimen.bg.bean.SingleValueBean">
        select count(uid) as valueinfo
        from user where type = '1' and isdel = '0'
    </select>
    <select id="getAllMastersCountByParams" resultType="dazhimen.bg.bean.SingleValueBean"
            parameterType="dazhimen.bg.bean.PaginationParamBean">
        select count(uid) as valueinfo
        from user where type = '1' and isdel = '0'
        <if test="searchCondition != null and searchCondition != ''">
            and (name like concat('%', #{searchCondition}, '%')
                 or mphone like concat('%', #{searchCondition}, '%')
                 or loginname like concat('%', #{searchCondition}, '%'))
        </if>
    </select>
    <select id="listAllMasters" resultType="dazhimen.bg.bean.user.UserBean"
            parameterType="dazhimen.bg.bean.PaginationParamBean">
        select uid,name,mphone,getcodetxt('gender',gender) gender,loginname,introduction
          from user where type = '1' and isdel = '0'
           limit #{startnum},#{getrows}
    </select>
    <select id="listAllMastersByParams" resultType="dazhimen.bg.bean.user.UserBean"
            parameterType="dazhimen.bg.bean.product.QueryMasterParamBean">
        select uid,name,mphone,getcodetxt('gender',gender) gender,loginname,introduction
        from user where type = '1' and isdel = '0'
        <if test="searchCondition != null and searchCondition != ''">
            and (name like concat('%', #{searchCondition}, '%')
            or mphone like concat('%', #{searchCondition}, '%')
            or loginname like concat('%', #{searchCondition}, '%'))
        </if>
        limit #{startnum},#{getrows}
    </select>

    <delete id="saveCourseDel">
        delete from course where courseid = #{courseid}
    </delete>

    <update id="saveModifyCourse" parameterType="dazhimen.bg.bean.product.UploadCourseBean">
        update course
          set coursename = #{coursename},istry = #{istry}, sort = #{sort},updatetime=now()
        where courseid =  #{courseid}
    </update>

    <insert id="saveAddCourse" parameterType="dazhimen.bg.bean.product.UploadCourseBean">
        insert into course(courseid,coursename,istry,sort,audiopath,createdate,updatetime,pid)
        values(#{courseid}, #{coursename},  #{istry},  #{sort}, #{audiopath}, now() , now(), #{pid})
    </insert>

    <select id="getProductMainImages" resultType="dazhimen.bg.bean.product.ViewMainImageBean">
          select imageid,path as mainimage
            from product_image
          where pid = #{pid}
    </select>

    <update id="saveModifyProductStatus" parameterType="dazhimen.bg.bean.product.ModifyProductStatusBean">
        update product set status = #{status} where pid = #{pid}
    </update>

    <delete id="saveProductImageDel">
         delete from product_image where pid = #{pid}
    </delete>

    <delete id="saveCourseDelByPid">
        delete from course where pid = #{pid}
    </delete>

    <update id="saveProductDel">
        delete from product where pid = #{pid}
    </update>

    <select id="getCourseSortData" resultType="dazhimen.bg.bean.product.CourseSortDataBean">
        select sort from course where pid = #{pid} and sort != '99' order by sort;
    </select>
</mapper>